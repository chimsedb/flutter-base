// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_base/test/ui/view_model/chapter_category_view_model_test.dart.
// Do not manually edit this file.

import 'package:flutter_base/data/model/manga.dart' as _i3;
import 'package:flutter_base/data/model/season.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _Fake$SeasonCopyWith_0<$Res> extends _i1.Fake
    implements _i2.$SeasonCopyWith<$Res> {}

/// A class which mocks [Manga].
///
/// See the documentation for Mockito's code generation for more information.
class MockManga extends _i1.Mock implements _i3.Manga {
  MockManga() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: '') as String);
  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  String get image =>
      (super.noSuchMethod(Invocation.getter(#image), returnValue: '')
          as String);
  @override
  List<String> get playListIds =>
      (super.noSuchMethod(Invocation.getter(#playListIds),
          returnValue: <String>[]) as List<String>);
}

/// A class which mocks [Season].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeason extends _i1.Mock implements _i2.Season {
  MockSeason() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get title =>
      (super.noSuchMethod(Invocation.getter(#title), returnValue: '')
          as String);
  @override
  List<_i2.Data> get data =>
      (super.noSuchMethod(Invocation.getter(#data), returnValue: <_i2.Data>[])
          as List<_i2.Data>);
  @override
  _i2.$SeasonCopyWith<_i2.Season> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$SeasonCopyWith_0<_i2.Season>())
          as _i2.$SeasonCopyWith<_i2.Season>);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}
